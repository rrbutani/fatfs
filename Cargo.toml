[package]
name = "fs"
version = "0.1.0"
authors = ["Rahul Butani <rr.butani@gmail.com>", "jspspike <jspspike@gmail.com>"]
edition = "2018"
publish = false

[lib]
# We use this in C (staticlib) and in other Rust programs (statically, so: rlib)
crate-type = ["staticlib", "rlib"]
# crate-type = ["staticlib"]

[dependencies]
typenum = "1.12.0"
generic-array = "0.14.1"
cfg-if = "0.1.10"
storage-traits = { version = "0.0.0", git = "ssh://git@github.com/rrbutani/storage-traits.git", default-features = false }

[target.'cfg(target_arch = "arm")'.dependencies]
bare-metal = "0.2.5" # In a perfect world this'd be disabled on feat(external_mutex)
cortex-m = "0.6.2"

[profile.release]
codegen-units = 1
debug = true
lto = "fat"

[features]
default = ["bindings", "no_std", "external_mutex"]
no_std = ["storage-traits/no_std"]
bindings = []
external_mutex = []

# The matrix goes:
# { (ARM + no_std)
# | (ARM + std)             // We won't actually try this...
# | (<other arch> + std)
# | (<other arch> + no_std)
# }
# x
# { (bindings)
# | (no bindings)
# }
#
#  ARM  | no_std | no bindings | → default mutex = ((cortex-m) bare_metal or error), or external (on feat)
#  ARM  | no_std |    bindings | → default mutex = ((cortex-m) bare_metal or error), or external (on feat)
#  ARM  |    std | no bindings | → default mutex = std, or external (on feat)
#  ARM  |    std |    bindings | → default mutex = std, or external (on feat)
# Other |    std | no bindings | → default mutex = std, or external (on feat)
# Other |    std |    bindings | → default mutex = std, or external (on feat)
# Other | no_std | no bindings | → default mutex = error, external (on feat)
# Other | no_std |    bindings | → default mutex = error, external (on feat)


# [[test]]
# required-features = []
# default-features = false
# name = "roundtrip"

# [[example]]
# required-features = []
# default-features = false

